<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>系统入侵对抗研究 on x7peeps</title>
    <link>x7peeps.github.io/%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97/%E7%B3%BB%E7%BB%9F%E5%85%A5%E4%BE%B5%E5%AF%B9%E6%8A%97%E7%A0%94%E7%A9%B6/index.html</link>
    <description>Recent content in 系统入侵对抗研究 on x7peeps</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Aug 2021 10:00:00 +0000</lastBuildDate><atom:link href="x7peeps.github.io/%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97/%E7%B3%BB%E7%BB%9F%E5%85%A5%E4%BE%B5%E5%AF%B9%E6%8A%97%E7%A0%94%E7%A9%B6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>windows计划任务隐藏-检查方式</title>
      <link>x7peeps.github.io/%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97/%E7%B3%BB%E7%BB%9F%E5%85%A5%E4%BE%B5%E5%AF%B9%E6%8A%97%E7%A0%94%E7%A9%B6/windows%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E9%9A%90%E8%97%8F-%E6%A3%80%E6%9F%A5%E6%96%B9%E5%BC%8F/index.html</link>
      <pubDate>Mon, 30 Aug 2021 10:00:00 +0000</pubDate>
      <guid>x7peeps.github.io/%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97/%E7%B3%BB%E7%BB%9F%E5%85%A5%E4%BE%B5%E5%AF%B9%E6%8A%97%E7%A0%94%E7%A9%B6/windows%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E9%9A%90%E8%97%8F-%E6%A3%80%E6%9F%A5%E6%96%B9%E5%BC%8F/index.html</guid>
      <description>计划任务隐藏 这里我们参考AnonySec的文章创建隐藏计划任务https://mp.weixin.qq.com/s/-G9aOm0mBh7eD7S5j9Lvog
创建任务
schtasks /create /tn TestSchtask /tr C:\Windows\System32\cmd.exe /sc DAILY /st 13:00:00查询创建任务
schtasks /query /TN TestSchtask /V /FO listId {GUID}，任务对应的guid编号。 Index 一般任务值为3，其他值未知。 SD Security Descriptor 安全描述符，在Windows中，每一个安全对象实体都拥有一个安全描述符，安全描述符包含了被保护对象相关联的安全信息的数据结构，它的作用主要是为了给操作系统提供判断来访对象的权限。
1. 非完全隐藏计划任务方式- index设0 通过修改index值，为0进行隐藏。
HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tree
这里需要注意rugu 想要修改index值，那么攻击时需要调整权限属性，将注册表的管理者权限改为当前用户，以修改index值。
whoami可知当前用户为desktop-d9itqnu\xt
C:\Users\xt&amp;gt;whoami
desktop-d9itqnu\xt
schtasks.exe无法直接查到
如果知道计划任务名称可以通过指定计划任务名称查询值：
我们将index在改变值的前后schtasks的查询结果分别保存并对比，index=0导出保存为1.txt，将index=1导出保存为2.txt可以看到，结论一：确实在查询schtasks的时候由于index设置导致无法在schtasks查询到计划任务。
并且在当前用户的计划任务UI中也是无法看到。
应对方式 这时由于注册表没有改动，并且reg功能正常的情况下，我们是可以通过reg针对计划任务树查询并确定可疑的计划任务。
直接查询注册表HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tree中的计划任务树。 reg query &amp;#34;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tree&amp;#34; 针对可疑的计划任务我们仍然可疑通过schtasks指定计划任务名称查询。指定TestSchtask查询计划任务详情。 这里需要注意，由于index值为0，此时想要通过schtasks发现异常的任务项是无法获取index值为0的项目，此时通过对比注册表查询结果可以快速定位异常的注册表值，再通过schtasks指定任务名称可以强制查询得到对应详情。
schtasks /query /TN TestSchtask /V /FO list 由于在修改index的时候需要注册表归属从原默认的system修改成当前用户，因此这个注册表的归属地方会有修改的痕迹 可以重点检查相关注册表的归属，确认痕迹：
HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tree
2. 完全隐藏计划任务方式 - SD 删除 删除 HKLM\Software\Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tree{TaskName}\SD</description>
    </item>
    <item>
      <title>CS X86 payload分析混淆加密</title>
      <link>x7peeps.github.io/%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97/%E7%B3%BB%E7%BB%9F%E5%85%A5%E4%BE%B5%E5%AF%B9%E6%8A%97%E7%A0%94%E7%A9%B6/%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97-cobalt_strike-x86_payload_%E5%88%86%E6%9E%90%E5%8F%8A%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/index.html</link>
      <pubDate>Thu, 20 Feb 2020 23:31:00 +0000</pubDate>
      <guid>x7peeps.github.io/%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97/%E7%B3%BB%E7%BB%9F%E5%85%A5%E4%BE%B5%E5%AF%B9%E6%8A%97%E7%A0%94%E7%A9%B6/%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97-cobalt_strike-x86_payload_%E5%88%86%E6%9E%90%E5%8F%8A%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/index.html</guid>
      <description>&lt;h1 id=&#34;cobalt-strike--bypassing-windows-defender-with-obfuscation&#34;&gt;Cobalt Strike – Bypassing Windows Defender with Obfuscation&lt;/h1&gt;
&lt;p&gt;
&lt;a href=&#34;#image-88b7006823fb469c91b6326f0e3e811a&#34; class=&#34;lightbox-link&#34;&gt;
&lt;img src=&#34;%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97-Cobalt_Strike-x86_payload_%E5%88%86%E6%9E%90%E5%8F%8A%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/20191217220720.png&#34; alt=&#34;&#34; style=&#34;height: auto; width: auto;&#34; loading=&#34;lazy&#34;&gt;
&lt;/a&gt;
&lt;a href=&#34;javascript:history.back();&#34; class=&#34;lightbox&#34; id=&#34;image-88b7006823fb469c91b6326f0e3e811a&#34;&gt;
&lt;img src=&#34;%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97-Cobalt_Strike-x86_payload_%E5%88%86%E6%9E%90%E5%8F%8A%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/20191217220720.png&#34; alt=&#34;&#34; class=&#34;lightbox-image&#34; loading=&#34;lazy&#34;&gt;
&lt;/a&gt;
Cobalt Strike 使用混淆绕WindowsDefender
原文：http://www.offensiveops.io/tools/cobalt-strike-bypassing-windows-defender-with-obfuscation/  （2018-03)
翻译：XT.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于这样一篇18年的文章我们发现目前由于攻防软件的升级，目前已经不再适用绕过了，但是其中的一些手法和方式仍然值得学习借鉴，针对新工具下的攻防仍待进一步学习研究。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Mysql提权小结</title>
      <link>x7peeps.github.io/%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97/%E7%B3%BB%E7%BB%9F%E5%85%A5%E4%BE%B5%E5%AF%B9%E6%8A%97%E7%A0%94%E7%A9%B6/%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97-%E5%90%8E%E6%B8%97%E9%80%8F_mysql%E6%8F%90%E6%9D%83%E5%B0%8F%E7%BB%93/index.html</link>
      <pubDate>Mon, 08 Oct 2018 21:21:00 +0000</pubDate>
      <guid>x7peeps.github.io/%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97/%E7%B3%BB%E7%BB%9F%E5%85%A5%E4%BE%B5%E5%AF%B9%E6%8A%97%E7%A0%94%E7%A9%B6/%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97-%E5%90%8E%E6%B8%97%E9%80%8F_mysql%E6%8F%90%E6%9D%83%E5%B0%8F%E7%BB%93/index.html</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;
&lt;a href=&#34;#image-05f487d70a9e4f5d348dee8b4c68c1c5&#34; class=&#34;lightbox-link&#34;&gt;
&lt;img src=&#34;http://xtpeeps.cn/wp-content/uploads/2018/03/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20180302133144.png&#34; alt=&#34;&#34; style=&#34;height: auto; width: auto;&#34; loading=&#34;lazy&#34;&gt;
&lt;/a&gt;
&lt;a href=&#34;javascript:history.back();&#34; class=&#34;lightbox&#34; id=&#34;image-05f487d70a9e4f5d348dee8b4c68c1c5&#34;&gt;
&lt;img src=&#34;http://xtpeeps.cn/wp-content/uploads/2018/03/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20180302133144.png&#34; alt=&#34;&#34; class=&#34;lightbox-image&#34; loading=&#34;lazy&#34;&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;学习Mysql提权小结一下，基本过程。明确了基本思路和方式方法。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
  </channel>
</rss>